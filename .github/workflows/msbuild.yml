# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: msbuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [windows-latest]
        build_type: [Release, release_noSSL]
        fp: [./Source/gm_bromsock]
        project: [gm_bromsock.vcxproj]
        #c_compiler: [gcc, clang, cl]
        #include:
        #  - os: windows-latest
        #    c_compiler: cl
        #    cpp_compiler: cl
        #  - os: ubuntu-latest
        #    c_compiler: gcc
        #    cpp_compiler: g++
        #  - os: ubuntu-latest
        #    c_compiler: clang
        #    cpp_compiler: clang++
        #exclude:
        #  - os: windows-latest
        #    c_compiler: gcc
        #  - os: windows-latest
        #    c_compiler: clang
        #  - os: windows-latest
        #    c_compiler: cl
        #    cpp_compiler: cl
        #  - os: ubuntu-latest
        #    c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        vs-version: '12.0'

   # - name: Restore NuGet packages
   #   working-directory: ${{env.GITHUB_WORKSPACE}}
   #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{ matrix.fp }}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      #run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      run: msbuild /m /p:Configuration=${{matrix.build_type}} ${{ matrix.project }}
